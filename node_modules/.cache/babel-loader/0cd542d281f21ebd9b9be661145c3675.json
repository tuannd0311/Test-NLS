{"ast":null,"code":"var _jsxFileName = \"/Users/tuannguyen/Library/Mobile Documents/com~apple~CloudDocs/Projects/demo/src/components/home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport Navbar from '../navbar';\nimport Loading from '../loading';\nimport { getDataCat, getDataDog } from '../../actions';\nimport './home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataCat: {}\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getDataCat = _this$props.getDataCat,\n          getDataDog = _this$props.getDataDog;\n    getDataDog();\n    getDataCat();\n  }\n\n  renderCat(data) {\n    console.log('daadadadad', data);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: data.url,\n      alt: \"Paris\",\n      width: \"95%\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          currentDataCat = _this$props2.currentDataCat,\n          currentDataDog = _this$props2.currentDataDog;\n    const checkdata = currentDataCat && currentDataCat.length ? true : false;\n    return React.createElement(\"div\", {\n      className: \"home-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"home-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"show-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, checkdata ? currentDataCat.map(data => this.renderCat(data)) : null, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Choosing a new cat\"), React.createElement(\"span\", {\n      className: \"text-cat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Cats who previously lived with another cat are more likely to get along with other cats than a cat who was an \\u201Conly child.\\u201D Think about the things that the cats already in your home like to do. If they like to play, getting another playful cat is probably a good idea.\")), React.createElement(\"div\", {\n      className: \"show-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: currentDataDog,\n      alt: \"Paris\",\n      width: \"95%\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentDataCat: state.home.dataCat,\n    currentDataDog: state.home.dataDog\n  };\n};\n\nconst mapDispatchToProps = {\n  getDataCat,\n  getDataDog\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/tuannguyen/Library/Mobile Documents/com~apple~CloudDocs/Projects/demo/src/components/home/index.js"],"names":["React","connect","Navbar","Loading","getDataCat","getDataDog","Home","Component","constructor","props","state","dataCat","componentDidMount","renderCat","data","console","log","url","render","currentDataCat","currentDataDog","checkdata","length","map","mapStateToProps","home","dataDog","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport '../App.css';\nimport Navbar from '../navbar';\nimport Loading from '../loading';\nimport { getDataCat, getDataDog } from '../../actions';\n\nimport './home.css'\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataCat: {},\n    }\n  }\n\n  componentDidMount() {\n    const { getDataCat, getDataDog } = this.props;\n    getDataDog()\n    getDataCat()\n  }\n\n  renderCat(data) {\n    console.log('daadadadad', data)\n    return (\n      <div>\n        <img src={data.url} alt=\"Paris\" width=\"95%\" height=\"300\" />\n      </div>\n    )\n  }\n\n  render() {\n    const { currentDataCat, currentDataDog } = this.props\n    const checkdata =  currentDataCat && currentDataCat.length ? true : false\n\n    return (\n      <div className='home-wrapper'>\n        <Navbar />\n        <div className='home-content'>\n          <Loading />\n          <div className='content'>\n            <div className='show-content'>\n              {checkdata ? currentDataCat.map( data => this.renderCat(data) ) : null}\n              <h1 className='title'>\n                Choosing a new cat\n              </h1>\n              <span className='text-cat'>\n                Cats who previously lived with another cat are more likely to get along with other cats than a cat who was an “only child.” Think about the things that the cats already in your home like to do. If they like to play, getting another playful cat is probably a good idea.\n              </span>\n            </div>\n            <div className='show-content'>\n              <img src={currentDataDog} alt=\"Paris\" width=\"95%\" height=\"300\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentDataCat: state.home.dataCat,\n    currentDataDog: state.home.dataDog,\n  }};\n\nconst mapDispatchToProps = {\n  getDataCat,\n  getDataDog,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/tuannguyen/Library/Mobile Documents/com~apple~CloudDocs/Projects/demo/src/components/input/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './input.css';\n\nclass Input extends React.Component {\n  onChangeText(id) {\n    let value = document.getElementById(id).value;\n\n    switch (id) {\n      case 'user-name':\n        this.props.setDataUserName(value);\n        break;\n\n      case 'pass-word':\n        this.props.setDataPassword(value);\n        break;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          type = _this$props.type,\n          placeholder = _this$props.placeholder,\n          id = _this$props.id,\n          classInput = _this$props.classInput;\n    return React.createElement(\"div\", {\n      className: \"input-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: id,\n      type: type,\n      className: classInput // placeholder={placeholder}\n      ,\n      onChange: () => this.onChangeText(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, placeholder));\n  }\n\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  classInput: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDataUserName(value) {\n      dispatch({\n        type: 'SET_DATA_USER_NAME',\n        value\n      });\n    },\n\n    setDataPassword(value) {\n      dispatch({\n        type: 'SET_DATA_PASSWORD',\n        value\n      });\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);","map":{"version":3,"sources":["/Users/tuannguyen/Library/Mobile Documents/com~apple~CloudDocs/Projects/demo/src/components/input/index.js"],"names":["React","PropTypes","connect","Input","Component","onChangeText","id","value","document","getElementById","props","setDataUserName","setDataPassword","render","type","placeholder","classInput","propTypes","string","onChange","func","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAElCC,EAAAA,YAAY,CAACC,EAAD,EAAK;AACf,QAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,EAA4BC,KAAxC;;AACA,YAAQD,EAAR;AACE,WAAK,WAAL;AACE,aAAKI,KAAL,CAAWC,eAAX,CAA2BJ,KAA3B;AACA;;AACF,WAAK,WAAL;AACE,aAAKG,KAAL,CAAWE,eAAX,CAA2BL,KAA3B;AACA;AANJ;AAQD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKH,KAD5C;AAAA,UACCI,IADD,eACCA,IADD;AAAA,UACOC,WADP,eACOA,WADP;AAAA,UACoBT,EADpB,eACoBA,EADpB;AAAA,UACwBU,UADxB,eACwBA,UADxB;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAEV,EADN;AAEE,MAAA,IAAI,EAAEQ,IAFR;AAGE,MAAA,SAAS,EAAEE,UAHb,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,MAAM,KAAKX,YAAL,CAAkBC,EAAlB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,WADH,CARF,CADF;AAcD;;AA/BiC;;AAkCpCZ,KAAK,CAACc,SAAN,GAAkB;AAChBH,EAAAA,IAAI,EAAEb,SAAS,CAACiB,MADA;AAEhBZ,EAAAA,EAAE,EAAEL,SAAS,CAACiB,MAFE;AAGhBF,EAAAA,UAAU,EAAEf,SAAS,CAACiB,MAHN;AAIhBH,EAAAA,WAAW,EAAEd,SAAS,CAACiB,MAJP;AAKhBC,EAAAA,QAAQ,EAAElB,SAAS,CAACmB,IAAV,CAAeC;AALT,CAAlB;;AAQA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO,EAAP;AACE,CAFJ;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,eAAe,CAACJ,KAAD,EAAQ;AACrBkB,MAAAA,QAAQ,CAAC;AAACX,QAAAA,IAAI,EAAE,oBAAP;AAA6BP,QAAAA;AAA7B,OAAD,CAAR;AACD,KAHI;;AAILK,IAAAA,eAAe,CAACL,KAAD,EAAQ;AACrBkB,MAAAA,QAAQ,CAAC;AAACX,QAAAA,IAAI,EAAE,mBAAP;AAA4BP,QAAAA;AAA5B,OAAD,CAAR;AACD;;AANI,GAAP;AAQD,CATD;;AAWA,eAAeL,OAAO,CACpBoB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbrB,KAHa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './input.css';\n\nclass Input extends React.Component {\n\n  onChangeText(id) {\n    let value = document.getElementById(id).value;\n    switch (id) {\n      case 'user-name':\n        this.props.setDataUserName(value)\n        break;\n      case 'pass-word':\n        this.props.setDataPassword(value)\n        break;\n    }\n  }\n\n  render() {\n    const { type, placeholder, id, classInput } = this.props;\n\n    return (\n      <div className=\"input-wrapper\">\n        <input\n          id={id}\n          type={type}\n          className={classInput}\n          // placeholder={placeholder}\n          onChange={() => this.onChangeText(id)}\n        />\n        <label>\n          {placeholder}\n        </label>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  id: PropTypes.string,\n  classInput: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n  }};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDataUserName(value) {\n      dispatch({type: 'SET_DATA_USER_NAME', value})\n    },\n    setDataPassword(value) {\n      dispatch({type: 'SET_DATA_PASSWORD', value})\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Input)\n"]},"metadata":{},"sourceType":"module"}